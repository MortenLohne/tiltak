use crate::position::{num_line_symmetries, num_square_symmetries, Komi};

pub const NUM_VALUE_FEATURES_4S: usize = 256;
pub const NUM_POLICY_FEATURES_4S: usize = 176;

pub const NUM_VALUE_FEATURES_5S: usize = 336;
pub const NUM_POLICY_FEATURES_5S: usize = 200;

pub const NUM_VALUE_FEATURES_6S: usize = 360;
pub const NUM_POLICY_FEATURES_6S: usize = 208;

fn value_padding<const S: usize>() -> usize {
    match S {
        4 => 2,
        5 => 2,
        6 => 6,
        _ => panic!("Unsupported size {}", S),
    }
}

fn policy_padding<const S: usize>() -> usize {
    match S {
        4 => 7,
        5 => 3,
        6 => 1,
        _ => panic!("Unsupported size {}", S),
    }
}

#[derive(Debug)]
pub struct ValueFeatures<'a> {
    pub first_ply: &'a mut [f32],
    pub second_ply: &'a mut [f32],
    pub flat_psqt: &'a mut [f32],
    pub wall_psqt: &'a mut [f32],
    pub cap_psqt: &'a mut [f32],
    pub supports_psqt: &'a mut [f32],
    pub captives_psqt: &'a mut [f32],
    pub shallow_supports_per_piece: &'a mut [f32],
    pub deep_supports_per_piece: &'a mut [f32],
    pub shallow_captives_per_piece: &'a mut [f32],
    pub deep_captives_per_piece: &'a mut [f32],
    pub us_to_move_opening_flatstone_lead: &'a mut [f32],
    pub them_to_move_opening_flatstone_lead: &'a mut [f32],
    pub us_to_move_middlegame_flatstone_lead: &'a mut [f32],
    pub them_to_move_middlegame_flatstone_lead: &'a mut [f32],
    pub us_to_move_endgame_flatstone_lead: &'a mut [f32],
    pub them_to_move_endgame_flatstone_lead: &'a mut [f32],
    pub i_number_of_groups: &'a mut [f32],
    pub critical_squares: &'a mut [f32],
    pub flat_next_to_our_stack: &'a mut [f32],
    pub wall_next_to_our_stack: &'a mut [f32],
    pub cap_next_to_our_stack: &'a mut [f32],
    pub num_lines_occupied: &'a mut [f32],
    pub line_control_empty: &'a mut [f32],
    pub line_control_their_blocking_piece: &'a mut [f32],
    pub line_control_other: &'a mut [f32],
    pub sidelined_cap: &'a mut [f32],
    pub fully_isolated_cap: &'a mut [f32],
    pub semi_isolated_cap: &'a mut [f32],
    pub padding: &'a mut [f32],
}

impl<'a> ValueFeatures<'a> {
    pub fn new<const S: usize>(coefficients: &'a mut [f32]) -> Self {
        assert_eq!(coefficients.len(), num_value_features::<S>() / 2);

        let (first_ply, coefficients) = coefficients.split_at_mut(1);
        let (second_ply, coefficients) = coefficients.split_at_mut(num_square_symmetries::<S>());
        let (flat_psqt, coefficients) = coefficients.split_at_mut(num_square_symmetries::<S>());
        let (wall_psqt, coefficients) = coefficients.split_at_mut(num_square_symmetries::<S>());
        let (cap_psqt, coefficients) = coefficients.split_at_mut(num_square_symmetries::<S>());
        let (supports_psqt, coefficients) = coefficients.split_at_mut(num_square_symmetries::<S>());
        let (captives_psqt, coefficients) = coefficients.split_at_mut(num_square_symmetries::<S>());
        let (shallow_supports_per_piece, coefficients) = coefficients.split_at_mut(4);
        let (deep_supports_per_piece, coefficients) = coefficients.split_at_mut(4);
        let (shallow_captives_per_piece, coefficients) = coefficients.split_at_mut(4);
        let (deep_captives_per_piece, coefficients) = coefficients.split_at_mut(4);
        let (us_to_move_opening_flatstone_lead, coefficients) = coefficients.split_at_mut(7);
        let (them_to_move_opening_flatstone_lead, coefficients) = coefficients.split_at_mut(7);
        let (us_to_move_middlegame_flatstone_lead, coefficients) = coefficients.split_at_mut(7);
        let (them_to_move_middlegame_flatstone_lead, coefficients) = coefficients.split_at_mut(7);
        let (us_to_move_endgame_flatstone_lead, coefficients) = coefficients.split_at_mut(7);
        let (them_to_move_endgame_flatstone_lead, coefficients) = coefficients.split_at_mut(7);
        let (i_number_of_groups, coefficients) = coefficients.split_at_mut(3);
        let (critical_squares, coefficients) = coefficients.split_at_mut(6);
        let (flat_next_to_our_stack, coefficients) = coefficients.split_at_mut(1);
        let (wall_next_to_our_stack, coefficients) = coefficients.split_at_mut(1);
        let (cap_next_to_our_stack, coefficients) = coefficients.split_at_mut(1);
        let (num_lines_occupied, coefficients) = coefficients.split_at_mut(S + 1);
        let (line_control_empty, coefficients) =
            coefficients.split_at_mut(S * num_line_symmetries::<S>());
        let (line_control_their_blocking_piece, coefficients) =
            coefficients.split_at_mut(S * num_line_symmetries::<S>());
        let (line_control_other, coefficients) =
            coefficients.split_at_mut(S * num_line_symmetries::<S>());
        let (sidelined_cap, coefficients) = coefficients.split_at_mut(3);
        let (fully_isolated_cap, coefficients) = coefficients.split_at_mut(3);
        let (semi_isolated_cap, coefficients) = coefficients.split_at_mut(3);
        let (padding, coefficients) = coefficients.split_at_mut(value_padding::<S>() / 2);

        assert!(coefficients.is_empty());

        ValueFeatures {
            first_ply,
            second_ply,
            flat_psqt,
            wall_psqt,
            cap_psqt,
            supports_psqt,
            captives_psqt,
            shallow_supports_per_piece,
            deep_supports_per_piece,
            shallow_captives_per_piece,
            deep_captives_per_piece,
            us_to_move_opening_flatstone_lead,
            them_to_move_opening_flatstone_lead,
            us_to_move_middlegame_flatstone_lead,
            them_to_move_middlegame_flatstone_lead,
            us_to_move_endgame_flatstone_lead,
            them_to_move_endgame_flatstone_lead,
            i_number_of_groups,
            critical_squares,
            flat_next_to_our_stack,
            wall_next_to_our_stack,
            cap_next_to_our_stack,
            num_lines_occupied,
            line_control_empty,
            line_control_their_blocking_piece,
            line_control_other,
            sidelined_cap,
            fully_isolated_cap,
            semi_isolated_cap,
            padding,
        }
    }
}

#[derive(Debug)]
pub struct PolicyFeatures<'a> {
    pub flat_psqt_white: &'a mut [f32],
    pub flat_psqt_black: &'a mut [f32],
    pub wall_psqt_white: &'a mut [f32],
    pub wall_psqt_black: &'a mut [f32],
    pub cap_psqt_white: &'a mut [f32],
    pub cap_psqt_black: &'a mut [f32],
    pub move_role_bonus_white: &'a mut [f32],
    pub move_role_bonus_black: &'a mut [f32],
    pub decline_win: &'a mut [f32],
    pub place_to_win: &'a mut [f32],
    pub place_to_draw: &'a mut [f32],
    pub place_to_loss: &'a mut [f32],
    pub place_to_allow_opponent_to_end: &'a mut [f32],
    pub two_flats_left: &'a mut [f32],
    pub three_flats_left: &'a mut [f32],
    pub our_road_stones_in_line: &'a mut [f32],
    pub their_road_stones_in_line: &'a mut [f32],
    pub extend_single_group_base: &'a mut [f32],
    pub extend_single_group_linear: &'a mut [f32],
    pub extend_single_group_to_new_line_base: &'a mut [f32],
    pub extend_single_group_to_new_line_linear: &'a mut [f32],
    pub merge_two_groups_base: &'a mut [f32],
    pub merge_two_groups_linear: &'a mut [f32],
    pub block_merger_base: &'a mut [f32],
    pub block_merger_linear: &'a mut [f32],
    pub place_our_critical_square: &'a mut [f32],
    pub place_their_critical_square: &'a mut [f32],
    pub ignore_their_critical_square: &'a mut [f32],
    pub next_to_our_last_stone: &'a mut [f32],
    pub next_to_their_last_stone: &'a mut [f32],
    pub diagonal_to_our_last_stone: &'a mut [f32],
    pub diagonal_to_their_last_stone: &'a mut [f32],
    pub attack_strong_flats: &'a mut [f32],
    pub blocking_stone_blocks_extensions_of_two_flats: &'a mut [f32],
    pub attack_strong_stack_with_wall: &'a mut [f32],
    pub attack_strong_stack_with_cap: &'a mut [f32],
    pub attack_last_movement: &'a mut [f32],
    pub place_last_movement: &'a mut [f32],
    pub simple_movement: &'a mut [f32],
    pub simple_capture: &'a mut [f32],
    pub simple_self_capture: &'a mut [f32],
    pub pure_spread: &'a mut [f32],
    pub fcd_highest_board: &'a mut [f32],
    pub fcd_highest_stack: &'a mut [f32],
    pub fcd_other: &'a mut [f32],
    pub stack_captured_by_movement: &'a mut [f32],
    pub stack_capture_in_strong_line: &'a mut [f32],
    pub stack_capture_in_strong_line_cap: &'a mut [f32],
    pub move_cap_onto_strong_line: &'a mut [f32],
    pub move_cap_onto_strong_line_with_critical_square: &'a mut [f32],
    pub recapture_stack_pure: &'a mut [f32],
    pub recapture_stack_impure: &'a mut [f32],
    pub move_last_placement: &'a mut [f32],
    pub continue_spread: &'a mut [f32],
    pub move_onto_critical_square: &'a mut [f32],
    pub spread_that_connects_groups_to_win: &'a mut [f32],
    pub padding: &'a mut [f32],
}

impl<'a> PolicyFeatures<'a> {
    pub fn new<const S: usize>(coefficients: &'a mut [f32]) -> PolicyFeatures<'a> {
        assert_eq!(coefficients.len(), num_policy_features::<S>());

        let (flat_psqt_white, coefficients) =
            coefficients.split_at_mut(num_square_symmetries::<S>());
        let (flat_psqt_black, coefficients) =
            coefficients.split_at_mut(num_square_symmetries::<S>());
        let (wall_psqt_white, coefficients) =
            coefficients.split_at_mut(num_square_symmetries::<S>());
        let (wall_psqt_black, coefficients) =
            coefficients.split_at_mut(num_square_symmetries::<S>());
        let (cap_psqt_white, coefficients) =
            coefficients.split_at_mut(num_square_symmetries::<S>());
        let (cap_psqt_black, coefficients) =
            coefficients.split_at_mut(num_square_symmetries::<S>());
        let (move_role_bonus_white, coefficients) = coefficients.split_at_mut(3);
        let (move_role_bonus_black, coefficients) = coefficients.split_at_mut(3);
        let (decline_win, coefficients) = coefficients.split_at_mut(1);
        let (place_to_win, coefficients) = coefficients.split_at_mut(1);
        let (place_to_draw, coefficients) = coefficients.split_at_mut(1);
        let (place_to_loss, coefficients) = coefficients.split_at_mut(1);
        let (place_to_allow_opponent_to_end, coefficients) = coefficients.split_at_mut(3);
        let (two_flats_left, coefficients) = coefficients.split_at_mut(2);
        let (three_flats_left, coefficients) = coefficients.split_at_mut(2);
        let (our_road_stones_in_line, coefficients) = coefficients.split_at_mut(S * 3);
        let (their_road_stones_in_line, coefficients) = coefficients.split_at_mut(S * 3);
        let (extend_single_group_to_new_line_base, coefficients) = coefficients.split_at_mut(3);
        let (extend_single_group_to_new_line_linear, coefficients) = coefficients.split_at_mut(3);
        let (extend_single_group_base, coefficients) = coefficients.split_at_mut(3);
        let (extend_single_group_linear, coefficients) = coefficients.split_at_mut(3);
        let (merge_two_groups_base, coefficients) = coefficients.split_at_mut(3);
        let (merge_two_groups_linear, coefficients) = coefficients.split_at_mut(3);
        let (block_merger_base, coefficients) = coefficients.split_at_mut(3);
        let (block_merger_linear, coefficients) = coefficients.split_at_mut(3);
        let (place_our_critical_square, coefficients) = coefficients.split_at_mut(1);
        let (place_their_critical_square, coefficients) = coefficients.split_at_mut(4);
        let (ignore_their_critical_square, coefficients) = coefficients.split_at_mut(2);
        let (next_to_our_last_stone, coefficients) = coefficients.split_at_mut(1);
        let (next_to_their_last_stone, coefficients) = coefficients.split_at_mut(1);
        let (diagonal_to_our_last_stone, coefficients) = coefficients.split_at_mut(1);
        let (diagonal_to_their_last_stone, coefficients) = coefficients.split_at_mut(1);
        let (attack_strong_flats, coefficients) = coefficients.split_at_mut(1);
        let (blocking_stone_blocks_extensions_of_two_flats, coefficients) =
            coefficients.split_at_mut(1);
        let (attack_strong_stack_with_wall, coefficients) = coefficients.split_at_mut(6);
        let (attack_strong_stack_with_cap, coefficients) = coefficients.split_at_mut(6);
        let (attack_last_movement, coefficients) = coefficients.split_at_mut(4);
        let (place_last_movement, coefficients) = coefficients.split_at_mut(3);
        let (simple_movement, coefficients) = coefficients.split_at_mut(3);
        let (simple_capture, coefficients) = coefficients.split_at_mut(4);
        let (simple_self_capture, coefficients) = coefficients.split_at_mut(4);
        let (pure_spread, coefficients) = coefficients.split_at_mut(2);
        let (fcd_highest_board, coefficients) = coefficients.split_at_mut(6);
        let (fcd_highest_stack, coefficients) = coefficients.split_at_mut(6);
        let (fcd_other, coefficients) = coefficients.split_at_mut(8);
        let (stack_captured_by_movement, coefficients) = coefficients.split_at_mut(1);
        let (stack_capture_in_strong_line, coefficients) = coefficients.split_at_mut(S - 3);
        let (stack_capture_in_strong_line_cap, coefficients) = coefficients.split_at_mut(S - 3);
        let (move_cap_onto_strong_line, coefficients) = coefficients.split_at_mut(S - 3);
        let (move_cap_onto_strong_line_with_critical_square, coefficients) =
            coefficients.split_at_mut(S - 3);
        let (recapture_stack_pure, coefficients) = coefficients.split_at_mut(3);
        let (recapture_stack_impure, coefficients) = coefficients.split_at_mut(3);
        let (move_last_placement, coefficients) = coefficients.split_at_mut(3);
        let (continue_spread, coefficients) = coefficients.split_at_mut(3);
        let (move_onto_critical_square, coefficients) = coefficients.split_at_mut(3);
        let (spread_that_connects_groups_to_win, coefficients) = coefficients.split_at_mut(1);
        let (padding, coefficients) = coefficients.split_at_mut(policy_padding::<S>());

        assert!(coefficients.is_empty());

        PolicyFeatures {
            flat_psqt_white,
            flat_psqt_black,
            wall_psqt_white,
            wall_psqt_black,
            cap_psqt_white,
            cap_psqt_black,
            move_role_bonus_white,
            move_role_bonus_black,
            decline_win,
            place_to_win,
            place_to_draw,
            place_to_loss,
            place_to_allow_opponent_to_end,
            two_flats_left,
            three_flats_left,
            our_road_stones_in_line,
            their_road_stones_in_line,
            extend_single_group_base,
            extend_single_group_linear,
            extend_single_group_to_new_line_base,
            extend_single_group_to_new_line_linear,
            merge_two_groups_base,
            merge_two_groups_linear,
            block_merger_base,
            block_merger_linear,
            place_our_critical_square,
            place_their_critical_square,
            ignore_their_critical_square,
            next_to_our_last_stone,
            next_to_their_last_stone,
            diagonal_to_our_last_stone,
            diagonal_to_their_last_stone,
            attack_strong_flats,
            blocking_stone_blocks_extensions_of_two_flats,
            attack_strong_stack_with_wall,
            attack_strong_stack_with_cap,
            attack_last_movement,
            place_last_movement,
            simple_movement,
            simple_capture,
            simple_self_capture,
            pure_spread,
            fcd_highest_board,
            fcd_highest_stack,
            fcd_other,
            stack_captured_by_movement,
            stack_capture_in_strong_line,
            stack_capture_in_strong_line_cap,
            move_cap_onto_strong_line,
            move_cap_onto_strong_line_with_critical_square,
            recapture_stack_pure,
            recapture_stack_impure,
            move_last_placement,
            continue_spread,
            move_onto_critical_square,
            spread_that_connects_groups_to_win,
            padding,
        }
    }
}

pub fn num_value_features<const S: usize>() -> usize {
    match S {
        4 => NUM_VALUE_FEATURES_4S,
        5 => NUM_VALUE_FEATURES_5S,
        6 => NUM_VALUE_FEATURES_6S,
        _ => unimplemented!(),
    }
}

pub fn num_policy_features<const S: usize>() -> usize {
    match S {
        4 => NUM_POLICY_FEATURES_4S,
        5 => NUM_POLICY_FEATURES_5S,
        6 => NUM_POLICY_FEATURES_6S,
        _ => unimplemented!(),
    }
}

pub fn value_features_4s(komi: Komi) -> &'static [f32; NUM_VALUE_FEATURES_4S] {
    match komi.half_komi() {
        0 => &VALUE_PARAMS_4S_0KOMI,
        8 => &VALUE_PARAMS_4S_4KOMI,
        _ => unimplemented!("4s is not supported for 0 komi."),
    }
}

pub fn policy_features_4s(komi: Komi) -> &'static [f32; NUM_POLICY_FEATURES_4S] {
    match komi.half_komi() {
        0 => &POLICY_PARAMS_4S_0KOMI,
        8 => &POLICY_PARAMS_4S_4KOMI,
        _ => unimplemented!("4s is not supported for 0 komi."),
    }
}

pub fn value_features_5s(komi: Komi) -> &'static [f32; NUM_VALUE_FEATURES_5S] {
    match komi.half_komi() {
        0 => &VALUE_PARAMS_5S_0KOMI,
        4 => &VALUE_PARAMS_5S_2KOMI,
        _ => unimplemented!("5s is not supported for 0 komi."),
    }
}

pub fn policy_features_5s(komi: Komi) -> &'static [f32; NUM_POLICY_FEATURES_5S] {
    match komi.half_komi() {
        0 => &POLICY_PARAMS_5S_0KOMI,
        4 => &POLICY_PARAMS_5S_2KOMI,
        _ => unimplemented!("5s is not supported for 0 komi."),
    }
}

pub fn value_features_6s(komi: Komi) -> &'static [f32; NUM_VALUE_FEATURES_6S] {
    match komi.half_komi() {
        0 => &VALUE_PARAMS_6S_0KOMI,
        4 => &VALUE_PARAMS_6S_2KOMI,
        _ => unimplemented!("6s is not supported for 0 komi."),
    }
}

pub fn policy_features_6s(komi: Komi) -> &'static [f32; NUM_POLICY_FEATURES_6S] {
    match komi.half_komi() {
        0 => &POLICY_PARAMS_6S_0KOMI,
        4 => &POLICY_PARAMS_6S_2KOMI,
        _ => unimplemented!("6s is not supported for 0 komi."),
    }
}

#[allow(clippy::unreadable_literal)]
pub const VALUE_PARAMS_4S_0KOMI: [f32; NUM_VALUE_FEATURES_4S] = [
    1.6314677,
    2.128453,
    1.665777,
    1.1935365,
    1.783611,
    1.8974017,
    2.0667224,
    0.3585674,
    0.9174667,
    1.4981939,
    -0.0059250165,
    -0.00050385203,
    -0.00651386,
    0.8360928,
    0.8542934,
    1.057493,
    0.45160037,
    0.62947434,
    0.8777375,
    0.95054346,
    1.4053806,
    0.005999675,
    -0.0073812627,
    0.3197311,
    0.09094712,
    -0.008598236,
    0.0018530292,
    -0.5716625,
    -0.17738743,
    0.005024814,
    0.0038007405,
    -0.60606277,
    -0.6120702,
    -0.0034531043,
    0.0013212701,
    0.41459012,
    0.7588403,
    0.63417596,
    0.61891013,
    0.5576459,
    0.3916682,
    0.2269258,
    -0.05949147,
    -0.17076741,
    -0.8246414,
    -0.90448844,
    -0.859646,
    -0.942624,
    -0.7403064,
    1.0354104,
    1.0122341,
    0.9414703,
    0.8111501,
    0.68319154,
    0.70849043,
    1.0260805,
    -0.998346,
    -0.66917586,
    -0.56946415,
    -0.6208217,
    -0.7517419,
    -0.90057904,
    -0.9493496,
    -0.17538372,
    0.08404019,
    0.5838575,
    0.9954204,
    1.4057337,
    1.523415,
    1.1614023,
    -1.1013027,
    -1.4883188,
    -1.4130737,
    -1.0089889,
    -0.5921282,
    -0.054381445,
    0.21194342,
    -0.10995764,
    0.10178168,
    0.146296,
    0.32548445,
    0.15799801,
    0.13274632,
    0.11381952,
    -0.00023208652,
    0.008934194,
    -0.008156243,
    -0.22252034,
    0.0059308577,
    -0.3052311,
    -0.36714828,
    -0.07798433,
    0.18008266,
    0.6088053,
    0.03753181,
    -0.36544782,
    0.3161356,
    1.0914515,
    0.035818946,
    -0.1594792,
    0.40039173,
    0.78171766,
    -0.6588763,
    -0.6248783,
    -0.1705305,
    0.31928492,
    -0.8593975,
    -0.6840152,
    -0.15963843,
    0.44942474,
    -0.3617615,
    -0.30067527,
    0.06863162,
    0.6876264,
    -0.50198275,
    -0.33834973,
    0.23653048,
    0.86217093,
    0.0040705632,
    0.0010270234,
    0.0011965558,
    0.0042462563,
    0.008161059,
    0.005203385,
    -0.0016289,
    0.0021942016,
    -0.0044462606,
    0.0,
    0.005722007,
    0.0051122922,
    0.0010959748,
    0.0020771455,
    -1.8218799,
    -1.8814843,
    -2.0561292,
    -0.81092125,
    -1.0187193,
    -1.448635,
    0.0043121455,
    -0.008000903,
    0.0010137418,
    -0.68734545,
    -0.8938471,
    -1.0850322,
    -0.47655413,
    -0.6186393,
    -0.81828564,
    -0.8962404,
    -1.3052868,
    0.008915393,
    -0.0005510999,
    -0.32987514,
    -0.13383624,
    0.008674609,
    0.008508706,
    0.585327,
    0.23960595,
    0.002457223,
    -0.0064589093,
    0.5539206,
    0.5612554,
    -0.0039176345,
    0.0039970186,
    -0.73793215,
    -0.94245005,
    -0.8537411,
    -0.8956495,
    -0.8193341,
    -0.17026299,
    -0.062885985,
    0.2119513,
    0.3825771,
    0.5634122,
    0.62089795,
    0.64082366,
    0.7550132,
    0.4185096,
    -0.9535101,
    -0.8931158,
    -0.7500539,
    -0.61026615,
    -0.5540478,
    -0.67390186,
    -0.9876527,
    1.0200509,
    0.7027355,
    0.7000663,
    0.8110279,
    0.9269257,
    1.0191998,
    1.0349642,
    0.20559649,
    -0.053321213,
    -0.595908,
    -1.0041248,
    -1.4194247,
    -1.4920107,
    -1.1003398,
    1.1560527,
    1.5110902,
    1.4205627,
    1.0049775,
    0.5751154,
    0.08223869,
    -0.17691313,
    0.29682043,
    -0.073151074,
    -0.105528615,
    -0.27790618,
    0.049816307,
    -0.105634615,
    0.0041374173,
    -0.00916178,
    -0.0003501959,
    -0.0052758376,
    0.22019243,
    0.006379608,
    0.20017974,
    0.4410069,
    0.22808486,
    -0.1834701,
    -0.6617351,
    0.04509234,
    0.37376574,
    -0.37142617,
    -1.0438837,
    0.047534432,
    0.25349537,
    -0.36122042,
    -0.7741652,
    0.68268144,
    0.6879543,
    0.28355503,
    -0.26139,
    0.80663365,
    0.6862584,
    0.13007677,
    -0.48083872,
    0.3581157,
    0.29917845,
    -0.15138665,
    -0.8376962,
    0.4930871,
    0.39787203,
    -0.20984718,
    -0.8874464,
    0.008153329,
    0.002645051,
    0.004003441,
    0.0071725287,
    0.0049608946,
    0.008243782,
    0.0015487336,
    -0.007857392,
    0.00948292,
    0.0,
];

#[allow(clippy::unreadable_literal)]
pub const POLICY_PARAMS_4S_0KOMI: [f32; NUM_POLICY_FEATURES_4S] = [
    -0.14414686,
    0.057245143,
    0.40790308,
    0.09701501,
    0.07937173,
    0.22421826,
    -0.36014262,
    -0.37481976,
    0.4303611,
    -0.10819886,
    -0.30977315,
    0.3183818,
    -0.001678803,
    0.008264789,
    0.0015326263,
    -0.006872382,
    -0.0035781572,
    0.0023975773,
    -0.33249667,
    -0.011977206,
    -0.0031730435,
    -0.3340441,
    -0.3470433,
    0.0021412876,
    -3.467676,
    1.4190543,
    1.1216447,
    -2.4847991,
    -2.6300194,
    0.12504318,
    0.4503803,
    -0.2383433,
    0.1939092,
    -0.15656821,
    0.1538943,
    0.019903272,
    -0.26858863,
    0.47592765,
    1.1951437,
    -0.21966591,
    -0.10222658,
    -0.2029749,
    -0.24275257,
    -0.0035659648,
    -0.0024085473,
    0.00952634,
    0.0013488671,
    0.1802531,
    -0.35310358,
    0.34622887,
    1.238589,
    -0.5728863,
    -0.47263348,
    -0.4349447,
    0.7423947,
    -0.0059215473,
    -0.0042123506,
    -0.0038043214,
    0.007477794,
    0.57672775,
    -0.19673206,
    -0.0015040664,
    -1.3653984,
    -0.108860984,
    0.009884633,
    0.49679586,
    0.43331614,
    0.008157708,
    0.081404775,
    -0.31876317,
    0.009757778,
    0.84308785,
    1.3186117,
    0.005344481,
    0.16944335,
    -0.92462367,
    -0.00041950494,
    0.22542763,
    0.42186928,
    0.0056207534,
    -0.93447715,
    -0.3503628,
    0.005889902,
    2.4339416,
    0.23640215,
    0.9812941,
    0.00303144,
    0.5813867,
    -5.12224,
    -0.5960039,
    0.23811787,
    1.4155983,
    0.427618,
    0.28322002,
    0.2842377,
    0.58326036,
    0.18107337,
    0.35046312,
    -0.34425166,
    0.5361546,
    0.0023710895,
    -0.0043152166,
    0.008186011,
    -0.0090307,
    0.0028009461,
    0.008272812,
    0.0077627413,
    0.0017063711,
    0.3561967,
    0.061396696,
    0.0049233297,
    0.0010997606,
    0.06363881,
    -0.20756766,
    0.008852346,
    -0.81535876,
    -0.31871113,
    0.0061481707,
    0.112815954,
    0.17273208,
    -0.00813673,
    -0.009886575,
    -0.8284388,
    -0.4114344,
    0.00021132734,
    -0.0017882753,
    0.2095985,
    -1.2281044,
    -0.0033593765,
    1.2040731,
    1.6232477,
    1.5634205,
    0.35888577,
    -0.010062265,
    -0.9609523,
    -0.8649116,
    -0.061715327,
    1.0070642,
    0.029340409,
    -0.0023286103,
    -0.06836898,
    -0.263048,
    -1.4532762,
    -1.0397167,
    -1.177722,
    -0.13422434,
    -0.50256175,
    -0.28250095,
    0.41323045,
    -0.11245518,
    -0.0025408124,
    0.004261763,
    -0.002740257,
    1.3772507,
    0.77097905,
    0.0028358363,
    -0.4771189,
    0.2866429,
    0.0024795057,
    0.28302962,
    0.8289564,
    -0.0075867055,
    0.28568712,
    0.06415005,
    0.0065161474,
    0.13644783,
    0.11818134,
    0.4174487,
    3.0953395,
    -0.0004463978,
    -0.0048420285,
    -0.0054027913,
    -0.006801691,
    -0.00862998,
    0.0036244253,
    -0.0046464396,
];

#[allow(clippy::unreadable_literal)]
pub const VALUE_PARAMS_4S_4KOMI: [f32; NUM_VALUE_FEATURES_4S] = [
    -2.9367454,
    -2.8866637,
    -3.1445684,
    -2.643071,
    1.8028008,
    1.8185256,
    2.0202208,
    -0.8220098,
    -1.3889936,
    -2.1818,
    0.4358358,
    0.49590623,
    0.46649364,
    0.71089697,
    0.90124315,
    1.1630988,
    1.078581,
    1.1572442,
    1.5150288,
    0.3544312,
    0.8724424,
    0.005999675,
    -0.0073812627,
    -0.41172907,
    -0.61999995,
    -0.008598236,
    0.0018530292,
    0.3321143,
    0.28434426,
    0.005024814,
    0.0038007405,
    0.14294685,
    0.8758792,
    4.296007,
    1.3260128,
    1.3606148,
    1.5926558,
    1.7179449,
    0.45323065,
    -0.062024415,
    -1.0215701,
    -1.4353919,
    0.069316015,
    -0.22758989,
    -0.49961156,
    0.34286657,
    -1.163143,
    -1.7755086,
    -2.7851794,
    0.59571916,
    3.482964,
    2.400573,
    1.7756554,
    0.64224356,
    -0.10186929,
    -0.69168043,
    0.047423124,
    0.11287885,
    2.580737,
    0.79271144,
    0.20431083,
    -0.55717534,
    -1.5160308,
    0.1110692,
    0.4397921,
    1.9422646,
    -0.61810976,
    -0.18924335,
    -1.0558838,
    1.7506708,
    -0.10622363,
    -0.026326114,
    -0.7945333,
    0.3780862,
    -1.8967265,
    -1.7833325,
    -1.2700632,
    -0.02097358,
    -0.0074185603,
    0.47442418,
    0.32589197,
    -0.20745805,
    0.10226152,
    0.056124695,
    -0.00023208652,
    0.008934194,
    -0.056085214,
    -0.16444787,
    -0.051262457,
    -1.5100819,
    -1.2921357,
    -0.94857454,
    -0.6354272,
    -0.1774072,
    -0.22314538,
    -0.7010159,
    0.06954779,
    0.92948896,
    -0.5868749,
    -0.23214413,
    0.4751329,
    0.9055694,
    -0.9751701,
    -0.77983016,
    -0.45688236,
    0.1886233,
    -1.1793071,
    -0.95509833,
    -0.44539958,
    0.0519885,
    -0.9448067,
    -0.6173714,
    0.08178912,
    0.7007644,
    -0.42046964,
    -0.2772996,
    0.54333824,
    0.9543175,
    -0.30016592,
    1.3719442,
    1.3996212,
    1.2660044,
    0.92664075,
    2.0581422,
    0.096440665,
    -0.18568857,
    -0.06007227,
    0.0,
    -0.32495067,
    -0.15810497,
    -0.04672917,
    0.3588054,
    -1.9618891,
    -2.1867588,
    -2.3548825,
    -1.3378524,
    -1.4272386,
    -1.5985185,
    0.47924975,
    0.2775319,
    0.11263576,
    -0.65187794,
    -0.7611913,
    -0.9066977,
    -0.3831883,
    -0.45535713,
    -0.42624462,
    -0.5126877,
    -1.5692844,
    -0.15620223,
    -0.19624043,
    0.3161406,
    0.17691703,
    0.87294245,
    -0.11969389,
    0.059770145,
    -0.07855101,
    -0.13189088,
    -0.19179933,
    0.15807651,
    0.35984048,
    -0.62237453,
    -0.07130004,
    -1.5696024,
    -2.260396,
    -0.95461136,
    -1.1198655,
    -0.0070628235,
    -0.0077676517,
    0.31346816,
    0.10425639,
    -1.9005793,
    -1.3572385,
    -0.042693805,
    -0.1766934,
    0.4705492,
    2.0038073,
    0.39857256,
    1.0302184,
    0.66566724,
    0.13977452,
    -0.23535055,
    -0.5085241,
    -0.79648155,
    1.8459202,
    2.4593697,
    1.7110448,
    1.1856396,
    0.664903,
    0.4107958,
    1.44392,
    -0.44697285,
    -0.824989,
    -2.34988,
    -1.8470016,
    -0.47756538,
    -0.11597214,
    0.01054622,
    0.9003227,
    0.9808008,
    1.1542228,
    -1.4916205,
    -0.69565505,
    -0.09630942,
    1.7464079,
    0.14715365,
    0.15280949,
    0.08869219,
    -0.27714524,
    0.18603756,
    -0.1364764,
    0.8011376,
    -0.16391811,
    0.0076200105,
    0.07854148,
    0.29250652,
    -0.007937893,
    0.33228216,
    0.41232067,
    0.20950806,
    -0.13977504,
    -0.72135025,
    -0.22313173,
    0.38438007,
    -0.37568942,
    -0.777148,
    0.065532915,
    -0.108291626,
    -0.8538483,
    -1.0729996,
    0.6652359,
    0.89014655,
    1.2897749,
    -0.7671177,
    1.4894782,
    1.5221418,
    1.3120722,
    -0.5749097,
    0.548471,
    0.071677886,
    -0.6436663,
    -1.2170316,
    0.091061756,
    -0.08488529,
    -0.6454855,
    -0.99351865,
    0.008934194,
    -0.0025578667,
    -0.0025578667,
    -0.0025578667,
    -0.0025578667,
    -0.0025578667,
    -0.0025578667,
    -0.0025578667,
    -0.0025578667,
    0.0,
];

#[allow(clippy::unreadable_literal)]
pub const POLICY_PARAMS_4S_4KOMI: [f32; NUM_POLICY_FEATURES_4S] = [
    0.13344148,
    0.048345864,
    0.6931786,
    0.032266907,
    -0.13050374,
    -0.115607925,
    -1.0028241,
    -1.045592,
    -1.0402985,
    0.6124307,
    0.51348203,
    1.7712632,
    -0.001678803,
    0.008264789,
    0.0015326263,
    -0.006872382,
    -0.0035781572,
    0.0023975773,
    -0.39934248,
    -0.52881694,
    -0.0031730435,
    0.08537813,
    -0.17427473,
    0.0021412876,
    0.029944161,
    -0.80178815,
    -0.5888178,
    -0.53073967,
    -0.20666386,
    -0.57624984,
    -1.9642756,
    -0.3807612,
    0.06934722,
    -0.4174424,
    0.112085514,
    -0.010105048,
    -0.031957664,
    0.41266093,
    0.9308142,
    0.09726815,
    -0.038930852,
    0.19005382,
    -0.59070975,
    -0.0035659648,
    -0.0024085473,
    0.00952634,
    0.0013488671,
    0.11940771,
    -0.18972278,
    0.37151253,
    0.9897976,
    -0.5012799,
    -0.4522976,
    -0.09285661,
    0.7336665,
    -0.0059215473,
    -0.0042123506,
    -0.0038043214,
    0.007477794,
    -0.2547972,
    1.4171761,
    -0.0015040664,
    1.9182318,
    -2.5214646,
    0.009884633,
    0.6016887,
    -1.6451161,
    0.008157708,
    -0.12051012,
    1.0112667,
    0.009757778,
    0.7300331,
    -0.81027156,
    0.005344481,
    0.22302698,
    0.18587457,
    -0.00041950494,
    -0.12750725,
    0.2607102,
    0.0056207534,
    -0.19240268,
    -0.42142686,
    0.005889902,
    2.467247,
    0.5738701,
    1.724536,
    0.00303144,
    0.24475338,
    -3.983281,
    -0.5111632,
    0.5408578,
    1.0271997,
    0.31120944,
    0.2546693,
    0.23512086,
    0.51307887,
    0.17595024,
    -0.0993198,
    -0.03186465,
    0.10594114,
    0.0023710895,
    -0.0043152166,
    0.008186011,
    -0.0090307,
    0.0028009461,
    0.008272812,
    0.0077627413,
    0.0017063711,
    0.3046023,
    0.22460021,
    0.0049233297,
    0.0010997606,
    0.15093221,
    -0.65645593,
    0.008852346,
    -1.1969306,
    -0.749357,
    0.0061481707,
    -0.16499402,
    -0.36851233,
    -0.00813673,
    -0.009886575,
    -0.30561614,
    -0.6902029,
    0.00021132734,
    -0.0017882753,
    0.4015109,
    -1.4115264,
    0.10149106,
    1.1930145,
    1.7153848,
    1.5572815,
    1.7422014,
    0.75430316,
    -0.70158976,
    -0.5039065,
    0.1087571,
    0.8024533,
    0.1410093,
    -0.019634794,
    -0.040539384,
    -0.19457588,
    -1.6070931,
    -1.5468643,
    -2.0660906,
    -0.3068856,
    -1.3381832,
    -0.8207547,
    0.33216485,
    -0.118598394,
    -0.0025408124,
    0.004261763,
    -0.002740257,
    1.4772594,
    1.1829083,
    0.0028358363,
    -0.0356134,
    1.7366725,
    0.0024795057,
    0.18105546,
    1.3109301,
    -0.0075867055,
    0.50029147,
    0.4608253,
    0.0065161474,
    0.30213022,
    -0.03336984,
    0.61130196,
    2.8785355,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
];

#[allow(clippy::unreadable_literal)]
pub const VALUE_PARAMS_5S_0KOMI: [f32; NUM_VALUE_FEATURES_5S] = [
    1.179727,
    1.6061107,
    1.1928546,
    1.2657585,
    0.9205569,
    0.93289137,
    0.9659143,
    1.4687524,
    1.4447285,
    1.4241682,
    1.4181001,
    1.3843254,
    1.3518834,
    0.2729915,
    0.7738252,
    0.6727555,
    1.3143339,
    1.2491608,
    1.0973086,
    -0.024859928,
    0.4242594,
    0.41141742,
    1.3106339,
    1.4125737,
    1.4019245,
    0.7477019,
    0.73174274,
    0.80680335,
    0.8266219,
    0.8796765,
    1.1022557,
    0.3531594,
    0.42884818,
    0.47044206,
    0.5403702,
    0.57600456,
    0.59908664,
    0.68714887,
    0.99879295,
    2.1233587,
    1.202677,
    0.32203358,
    0.023205323,
    -0.33765265,
    0.05689273,
    -0.54971546,
    -0.2736659,
    -0.50896084,
    -0.1461449,
    -0.6141488,
    -0.42963532,
    -0.055039853,
    -0.42015284,
    0.0026336305,
    0.0067325304,
    0.5658786,
    0.6916033,
    0.79483736,
    0.78489083,
    0.15456496,
    0.0034330469,
    -0.13601904,
    -0.8422726,
    -0.48769736,
    -0.34531265,
    -0.27308244,
    -0.07767356,
    0.7226154,
    0.6633821,
    0.5896483,
    0.557603,
    0.45662138,
    0.37531444,
    0.45829535,
    -0.23381719,
    -0.4083135,
    -0.4203231,
    -0.505769,
    -0.5493556,
    -0.6599402,
    -0.75101554,
    0.031735253,
    0.23707463,
    0.4192342,
    0.5670769,
    0.73446447,
    0.8890611,
    1.0351793,
    -1.2731228,
    -1.0256239,
    -0.8737266,
    -0.7097499,
    -0.56704843,
    -0.36667317,
    -0.19116041,
    -0.2511425,
    -0.17757204,
    -0.06763552,
    0.3449609,
    0.08623179,
    0.1793743,
    -0.0027471436,
    0.13020858,
    -0.012445014,
    -0.0027070532,
    -0.16591959,
    -0.14890738,
    -0.006366889,
    -0.6823907,
    -0.28107327,
    -0.03214778,
    0.3078535,
    0.71380675,
    0.0203952,
    -0.37042534,
    -0.06256291,
    0.42138952,
    0.8262704,
    0.027946118,
    -0.41529986,
    0.10353455,
    0.58910716,
    0.92939025,
    -0.02184276,
    -0.41947833,
    -0.015574069,
    0.5268811,
    0.8392071,
    -0.45115268,
    -0.56622684,
    -0.27051815,
    -0.0728165,
    0.22547917,
    -0.7666636,
    -0.78194696,
    -0.3490897,
    0.12798177,
    0.50852025,
    -0.7245104,
    -0.7043602,
    -0.3582066,
    0.16899095,
    0.61650574,
    -0.23422909,
    -0.2273298,
    -0.029497843,
    0.29314268,
    0.59148353,
    -0.57648134,
    -0.4878669,
    -0.084902875,
    0.45736256,
    0.8441364,
    -0.5641508,
    -0.49629724,
    -0.09806835,
    0.36659777,
    0.9169759,
    -0.22270635,
    -0.082249396,
    -0.26459935,
    -0.96287787,
    -0.43616453,
    -0.010302887,
    -0.41476908,
    -0.03297643,
    -0.20575568,
    0.0,
    -0.0077517964,
    -0.0077192923,
    -0.009022991,
    -0.0027733874,
    0.009177124,
    -0.006355319,
    0.001523626,
    -1.4115609,
    -1.4072635,
    -1.4549966,
    -1.4530975,
    -1.411672,
    -1.3133003,
    -0.39027548,
    -0.6515842,
    -0.80457276,
    -1.0583127,
    -1.0836939,
    -1.1823648,
    -0.08158472,
    -0.49340117,
    -0.4486989,
    -1.0956546,
    -1.3096933,
    -1.4981681,
    -0.59383756,
    -0.82396597,
    -0.86652505,
    -0.8676794,
    -0.9016932,
    -1.0128089,
    -0.32762495,
    -0.45921895,
    -0.46114442,
    -0.5356467,
    -0.53635895,
    -0.6195978,
    -0.64307797,
    -0.8940887,
    -1.615303,
    -1.1386408,
    -0.2169872,
    -0.038014043,
    -0.34891668,
    -0.1643723,
    0.56022257,
    0.26478356,
    0.3931122,
    0.25389716,
    0.45235595,
    0.44459587,
    0.09925606,
    0.48500076,
    -0.07645082,
    -0.2685289,
    -0.35676128,
    -0.49924198,
    -0.8448867,
    -0.123041645,
    -0.0037965132,
    0.16792378,
    0.79043275,
    0.77822965,
    0.6950211,
    0.5687384,
    0.002612164,
    0.019611707,
    -0.7445836,
    -0.6575878,
    -0.56631917,
    -0.5086981,
    -0.4127393,
    -0.39714533,
    -0.2400669,
    0.45936018,
    0.37619063,
    0.4584526,
    0.5685172,
    0.5881659,
    0.65845543,
    0.7315816,
    -0.18303216,
    -0.37026936,
    -0.55895483,
    -0.7024636,
    -0.88048184,
    -1.0176921,
    -1.2754719,
    1.0268291,
    0.893208,
    0.7271115,
    0.57679105,
    0.42552325,
    0.22097597,
    0.03785562,
    0.2055693,
    0.14064696,
    5.4665766e-6,
    -0.28472087,
    -0.02220915,
    -0.11652415,
    -0.034348875,
    -0.1067824,
    0.008958639,
    -0.008801015,
    0.18068032,
    0.1589471,
    -0.0027919943,
    0.6086644,
    0.3585514,
    0.061270475,
    -0.30522487,
    -0.6917768,
    0.0068121837,
    0.4118016,
    0.05850437,
    -0.4047752,
    -0.8528907,
    0.027316201,
    0.51203966,
    0.032578558,
    -0.5400942,
    -0.8271976,
    -0.0245909,
    0.50758445,
    0.026225429,
    -0.6035853,
    -0.90040827,
    0.54556984,
    0.5798678,
    0.37224954,
    0.08391319,
    -0.134048,
    0.64142495,
    0.67605823,
    0.28604,
    -0.0877979,
    -0.57749647,
    0.8456918,
    0.7517487,
    0.3725883,
    -0.026372699,
    -0.48419422,
    0.20495735,
    0.21273601,
    0.0520453,
    -0.32446092,
    -0.75961006,
    0.5453586,
    0.55078757,
    0.14716218,
    -0.39657107,
    -0.9033925,
    0.52342474,
    0.5185963,
    0.030330919,
    -0.44795433,
    -1.0202376,
    0.3011516,
    0.17765208,
    0.07866362,
    0.48867252,
    0.16293703,
    0.16766755,
    0.30926326,
    -0.2270425,
    0.17481883,
    0.0,
];

#[allow(clippy::unreadable_literal)]
pub const POLICY_PARAMS_5S_0KOMI: [f32; NUM_POLICY_FEATURES_5S] = [
    -0.15876403,
    0.17835706,
    0.040821973,
    0.35458016,
    0.048111383,
    -0.108005285,
    -0.1157228,
    0.081837356,
    0.026495643,
    0.30599132,
    0.016806707,
    -0.16554768,
    -0.30870217,
    -0.34888393,
    -0.18916579,
    0.11869347,
    0.1869335,
    0.36136097,
    -0.08242711,
    -0.21217692,
    -0.2783738,
    0.124850556,
    0.16380355,
    0.14999926,
    -1.3293175,
    -1.2542745,
    -0.7973954,
    0.42566764,
    0.95107186,
    2.5031545,
    -0.924715,
    -1.3780963,
    -1.1663486,
    0.15422115,
    0.8503927,
    2.634156,
    -0.3265769,
    0.0249686,
    -0.022128057,
    -0.34394115,
    -0.15611671,
    -0.18449953,
    -2.821103,
    1.1254854,
    0.59210074,
    -2.1568487,
    -2.07656,
    0.05975866,
    0.4677884,
    -0.3075752,
    0.14529797,
    -0.140809,
    0.08555677,
    0.019586945,
    -0.26784855,
    0.0038166526,
    0.43628806,
    0.7874893,
    -0.23698969,
    -0.1776435,
    -0.06295528,
    -0.09188417,
    -0.033378605,
    0.0109931575,
    0.027323242,
    0.4893095,
    1.038471,
    -0.33009103,
    0.29511222,
    -0.16104034,
    0.039393034,
    0.39021322,
    0.41359922,
    -0.31029695,
    -0.44862193,
    -0.43087202,
    0.06331455,
    0.5515781,
    -0.4831366,
    -0.6128924,
    -0.24951541,
    0.48869672,
    2.089454,
    0.6009848,
    -0.08763965,
    0.45721534,
    -0.008963317,
    -0.32673818,
    -0.55913115,
    0.3602885,
    0.13724649,
    0.17706464,
    0.26478267,
    0.006592667,
    -0.42436185,
    1.5800018,
    0.34343702,
    0.8290165,
    -0.14815207,
    -0.18737926,
    -0.06930179,
    0.4134723,
    0.72799194,
    1.3819674,
    -0.23218736,
    -0.5955073,
    -0.33188742,
    2.1683028,
    0.22439934,
    2.104698,
    2.5232162,
    0.59217435,
    -3.6029325,
    -0.69152564,
    0.400279,
    1.405464,
    0.32577696,
    0.41544622,
    0.1498444,
    0.31983712,
    0.27204528,
    0.33461282,
    -0.049397215,
    0.3879165,
    -0.018712742,
    0.39851126,
    -0.12576722,
    -0.17712992,
    0.003608826,
    0.055412896,
    -0.27231386,
    -0.052062087,
    0.2754958,
    -0.05292272,
    0.009099964,
    0.0013535284,
    0.33620587,
    0.09001386,
    1.1220776,
    -1.208334,
    -0.3129152,
    -0.69010246,
    -0.040655855,
    0.027064366,
    0.571908,
    0.7459515,
    -1.0526849,
    -0.3632826,
    -0.2134726,
    0.19324255,
    0.10672012,
    -1.1014051,
    0.25494328,
    1.0606011,
    1.431859,
    0.9521457,
    0.58549803,
    0.05858993,
    -0.785435,
    -0.47087252,
    0.2900115,
    1.0168462,
    0.25354838,
    -0.0011705728,
    -0.37991613,
    -0.6616476,
    -0.93275523,
    -0.8849155,
    -0.83144,
    -0.21449153,
    -0.79411787,
    -0.94211155,
    0.3714017,
    -0.0140130585,
    -0.11495546,
    0.035195675,
    0.118563235,
    0.024229309,
    0.37050366,
    -0.24969314,
    -0.026235444,
    1.7884532,
    1.071919,
    1.3536344,
    -0.20753857,
    0.66492295,
    1.6518925,
    0.49278376,
    1.0517601,
    0.71827435,
    0.31265905,
    0.38217282,
    -0.024949746,
    0.246467,
    0.17248435,
    0.9139369,
    3.0342748,
    0.0,
    0.0,
    0.0,
];

#[allow(clippy::unreadable_literal)]
pub const VALUE_PARAMS_5S_2KOMI: [f32; NUM_VALUE_FEATURES_5S] = [
    0.9576048,
    1.0841619,
    0.3780696,
    0.45378298,
    0.02916664,
    -0.21192087,
    -0.29556197,
    1.4930935,
    1.4615986,
    1.5215328,
    1.499797,
    1.5159218,
    1.3635213,
    0.27702,
    0.5382675,
    0.55821234,
    0.6538777,
    0.91528744,
    0.98612463,
    0.39557648,
    0.5977974,
    0.75167793,
    1.1875995,
    1.6324513,
    1.8419882,
    0.46911594,
    0.5383509,
    0.5841685,
    0.58646685,
    0.6866496,
    0.701747,
    0.3665948,
    0.48273185,
    0.45786157,
    0.53943056,
    0.6355887,
    0.5692503,
    0.79480666,
    1.0982713,
    2.0681791,
    1.4843044,
    0.2624178,
    -0.16402379,
    -1.9562291,
    -0.039935675,
    -0.47794256,
    -0.1286795,
    -0.048079193,
    -0.017940288,
    -0.42545626,
    -0.3612452,
    -1.2768433,
    -0.34523562,
    -0.73694515,
    -0.058147762,
    0.1059695,
    0.39006642,
    0.6492279,
    0.69176483,
    0.66237634,
    -0.6065814,
    -0.8428912,
    -0.086267374,
    -0.01892811,
    0.24314001,
    0.4668209,
    0.5499141,
    1.280484,
    0.61614144,
    0.5403652,
    -0.0021812047,
    -0.33181193,
    -0.7687136,
    -1.1445667,
    0.9630693,
    0.2572554,
    -0.19325063,
    -0.26789713,
    -0.8439605,
    -1.1554192,
    -1.6809334,
    0.069118895,
    0.22775011,
    0.31435692,
    0.4154473,
    0.73447233,
    0.86105835,
    1.0125461,
    -0.9008931,
    -0.56152296,
    -0.47995493,
    -0.35800803,
    -0.24667677,
    -0.02031217,
    0.17890008,
    -0.27386823,
    -0.14309557,
    0.007119131,
    0.31364974,
    0.17335309,
    0.13252604,
    0.026481066,
    0.088660814,
    -0.12220215,
    0.010174569,
    -0.12703109,
    -0.12767555,
    -0.9549428,
    -0.14758445,
    0.020731006,
    0.08562342,
    0.27779427,
    0.49853504,
    -0.08512912,
    -0.49200678,
    -0.05036602,
    0.55414164,
    0.99980617,
    -0.050322793,
    -0.5115399,
    0.025977757,
    0.53936094,
    0.9666763,
    -0.06435577,
    -0.52486295,
    -0.05601803,
    0.57532185,
    0.93751246,
    -0.9023189,
    -0.7359218,
    -0.37538752,
    -0.05142323,
    0.3797759,
    -0.9422043,
    -0.77989143,
    -0.3359955,
    0.17245863,
    0.65658396,
    -0.9588381,
    -0.76813763,
    -0.30566138,
    0.19367728,
    0.7310583,
    -0.24875724,
    -0.28852382,
    -0.057124197,
    0.28738257,
    0.68034786,
    -0.7284242,
    -0.5463123,
    -0.13096724,
    0.39016736,
    0.9215243,
    -0.8030903,
    -0.61768705,
    -0.062273633,
    0.48222873,
    1.0346321,
    -0.31919554,
    -0.42085925,
    -0.44721845,
    -0.83133596,
    -0.4127462,
    -0.312626,
    -0.30192456,
    0.09646648,
    -0.49319115,
    0.0,
    -0.0077517964,
    -0.0077192923,
    -0.009022991,
    -0.0027733874,
    0.009177124,
    -0.006355319,
    0.001523626,
    -1.6072552,
    -1.6273986,
    -1.5729334,
    -1.5774136,
    -1.571549,
    -1.485391,
    -0.5769634,
    -1.0158969,
    -0.8962273,
    -1.4407736,
    -1.4502375,
    -1.4506472,
    0.095757976,
    -0.4379582,
    -0.5127444,
    -1.3072802,
    -1.3944402,
    -1.628739,
    -0.5601044,
    -0.7320798,
    -0.82889503,
    -0.76449794,
    -0.8006296,
    -0.74127066,
    -0.3231812,
    -0.43480128,
    -0.4587092,
    -0.5469982,
    -0.5334591,
    -0.5326326,
    -0.6148084,
    -1.0079314,
    -1.9838952,
    -1.2972008,
    -0.17781281,
    0.24808091,
    0.20911597,
    0.20409255,
    0.4940875,
    0.1788778,
    0.2859297,
    0.08975817,
    0.17639597,
    0.36243606,
    1.0376446,
    0.21832286,
    -0.002883594,
    0.0066047586,
    -0.0040109972,
    -0.0039588884,
    0.0011708908,
    0.173981,
    -0.4794843,
    0.00716334,
    -0.000495675,
    -0.00897359,
    0.0012100942,
    0.012158075,
    0.08036299,
    1.6343149,
    -0.0013137183,
    0.008603485,
    -0.41086957,
    -0.63797134,
    0.13320532,
    -1.850822,
    -0.16068894,
    0.0031470694,
    0.00031933072,
    0.0009459482,
    -0.46322495,
    -1.4198009,
    0.7401977,
    1.3455313,
    0.008264251,
    0.0062631676,
    -0.7445458,
    0.24027723,
    0.585249,
    -1.0786117,
    -1.3866062,
    -0.0047164634,
    0.005221012,
    0.025311338,
    -0.26801208,
    1.7707253,
    1.8371395,
    0.26365617,
    0.18942393,
    0.14465722,
    0.050488688,
    -0.25254285,
    -0.108749144,
    -0.11779048,
    0.121132284,
    -0.07154758,
    -0.024392236,
    -0.02089896,
    0.19251224,
    0.17705558,
    0.57824177,
    0.23294379,
    0.066767015,
    -0.12259434,
    -0.34979558,
    -0.61631227,
    -0.09871251,
    0.18502747,
    -0.14193042,
    -0.47259712,
    -0.8588347,
    -0.050952755,
    0.3843377,
    -0.07940993,
    -0.49444464,
    -0.84930307,
    -0.067103915,
    0.47737983,
    0.089869685,
    -0.37922335,
    -0.92660445,
    0.44708216,
    0.4889066,
    0.22093873,
    0.06962905,
    -0.50784653,
    0.7217989,
    0.66580427,
    0.23991801,
    -0.18013595,
    -0.71844524,
    0.7502791,
    0.525109,
    0.17504752,
    -0.23247409,
    -0.9235706,
    0.35594195,
    0.27866,
    0.08921056,
    -0.17938311,
    -0.30321234,
    0.6043635,
    0.47722104,
    0.09690479,
    -0.37684503,
    -0.83398145,
    0.76775384,
    0.6179645,
    0.16911879,
    -0.35453594,
    -0.8599512,
    0.20443301,
    0.11315557,
    0.0021700254,
    0.5272895,
    0.060495093,
    0.36501202,
    0.051024795,
    -0.08350881,
    0.20085889,
    0.0,
];

#[allow(clippy::unreadable_literal)]
pub const POLICY_PARAMS_5S_2KOMI: [f32; NUM_POLICY_FEATURES_5S] = [
    0.13053814,
    0.2594758,
    0.24701957,
    0.32714072,
    0.2772792,
    -0.13828218,
    -0.10215987,
    0.098732464,
    0.019896906,
    -0.056102987,
    -0.07790267,
    -0.42510068,
    -0.30549508,
    -0.45333365,
    -0.52566814,
    -0.29246622,
    -0.28865135,
    -0.26258516,
    0.11082738,
    0.17156202,
    -0.038298223,
    0.46970895,
    0.49330792,
    0.45982635,
    -1.5306015,
    -0.70623446,
    -1.6051459,
    1.1686573,
    1.569235,
    2.0058358,
    -2.5606222,
    -1.2750763,
    -2.0411723,
    0.8546261,
    1.8828146,
    2.5776637,
    -0.54405427,
    0.17359827,
    -0.07840562,
    -0.24876921,
    -0.18755311,
    -0.26911703,
    -3.0770643,
    1.1082592,
    0.26119882,
    -2.5300553,
    -2.871422,
    0.03775389,
    0.4238567,
    -0.33088768,
    0.10647789,
    -0.13209525,
    0.08560816,
    0.0468911,
    -0.21627295,
    0.05250266,
    0.38945135,
    0.81790227,
    -0.23717421,
    -0.22604689,
    -0.19218688,
    -0.20800717,
    -0.033787068,
    0.122389324,
    -0.10022763,
    -0.073142864,
    0.6767682,
    -0.04690488,
    0.33146432,
    -0.22365022,
    -0.0036192038,
    0.46967515,
    0.51455325,
    -0.2567931,
    -0.40734252,
    -0.42442977,
    -0.001470779,
    0.22078364,
    -1.2574711,
    -0.85755,
    -0.74906814,
    -0.17770536,
    3.6172705,
    0.54112595,
    0.6423261,
    0.9667451,
    0.199188,
    -1.3389384,
    0.16624917,
    0.19690222,
    -0.4323959,
    -0.23050337,
    0.34784153,
    0.61946857,
    -0.7219571,
    1.2463146,
    0.5738733,
    2.0701928,
    0.049495548,
    -0.42689493,
    -1.0372397,
    0.26199716,
    0.7308859,
    1.6175814,
    -0.0076032556,
    -0.68225515,
    0.12284207,
    2.349499,
    0.1210995,
    2.3559947,
    1.0110165,
    0.4826661,
    -4.137684,
    -0.87189615,
    0.58148867,
    1.5087106,
    0.51515806,
    0.27801824,
    0.1363943,
    0.39705855,
    0.3311712,
    0.13834442,
    -0.009231192,
    0.37948412,
    0.013899716,
    0.34986228,
    0.20538929,
    -1.3363253,
    -0.6954224,
    -0.26191995,
    -0.23036456,
    -0.17417376,
    0.21034743,
    0.08639803,
    0.009099964,
    0.0013535284,
    0.37892112,
    0.085819654,
    1.4048743,
    -2.3133554,
    -1.2493757,
    -1.597994,
    -0.20851141,
    -0.025360083,
    0.2432856,
    0.7032871,
    -1.9057463,
    -1.1427703,
    -0.49652052,
    0.84754634,
    0.08384458,
    -1.2245532,
    0.5221889,
    1.2940357,
    1.6118815,
    1.3088297,
    1.4081663,
    -0.2697331,
    -0.76520354,
    -0.34188744,
    0.6127755,
    1.3039353,
    1.4138254,
    0.12542252,
    -1.4124713,
    -0.9411064,
    -0.9240627,
    -0.92811567,
    -1.1624233,
    -0.3372181,
    -1.4078445,
    -2.251844,
    0.36175016,
    -0.023277655,
    -0.08955618,
    0.0533145,
    0.14049543,
    -0.019719895,
    -0.007010526,
    -0.096855216,
    -0.22378309,
    1.7177029,
    0.7570125,
    1.2928087,
    0.07078977,
    1.540554,
    1.9195119,
    0.41963235,
    0.9632119,
    0.60895467,
    0.32042414,
    0.36884412,
    0.16893406,
    0.3075245,
    -0.011423582,
    0.7850744,
    3.0451703,
    0.0,
    0.0,
    0.0,
];

#[allow(clippy::unreadable_literal)]
pub const VALUE_PARAMS_6S_0KOMI: [f32; NUM_VALUE_FEATURES_6S] = [
    0.7192287,
    1.3407046,
    0.90029705,
    0.9000153,
    0.5229879,
    0.39498606,
    0.24540663,
    1.5384659,
    1.5212754,
    1.5074358,
    1.6016531,
    1.5951823,
    1.5213754,
    0.2615012,
    0.65006846,
    0.682856,
    1.0171542,
    1.0669025,
    1.2699591,
    -0.1402871,
    0.23192532,
    0.40912005,
    0.9911537,
    1.220398,
    1.5319767,
    0.49098763,
    0.5625256,
    0.5997552,
    0.67380404,
    0.75474566,
    0.7291492,
    0.39254805,
    0.44766635,
    0.44331962,
    0.5357653,
    0.53905445,
    0.5098648,
    0.61202925,
    0.85028654,
    1.5246342,
    1.0383941,
    0.2713628,
    -0.24114206,
    -0.19984946,
    -0.06308752,
    -0.5335409,
    -0.19694358,
    -0.27221474,
    -0.10471076,
    -0.3814452,
    -0.37227288,
    -0.6382414,
    -0.39840817,
    -0.034613077,
    0.11319955,
    0.5033457,
    0.4788738,
    0.5531529,
    0.60473335,
    0.09272212,
    -0.007864464,
    -0.07860591,
    -0.56309485,
    -0.4603277,
    -0.43540317,
    -0.39435515,
    -0.10269657,
    0.82478136,
    0.8277959,
    0.50273293,
    0.48561716,
    0.29351524,
    0.19667406,
    0.09720157,
    -0.21537861,
    -0.1076059,
    -0.1443548,
    -0.4521167,
    -0.47058454,
    -0.65582824,
    -0.8182515,
    0.37465772,
    0.3962736,
    0.43687245,
    0.44560903,
    0.46817765,
    0.49917087,
    0.55113053,
    -0.62091225,
    -0.5754114,
    -0.56483656,
    -0.5259715,
    -0.5281519,
    -0.49648446,
    -0.45754278,
    -0.2380508,
    -0.1987488,
    -0.009471924,
    0.28120983,
    0.19638862,
    0.16085055,
    0.010369509,
    0.10036021,
    -0.053957466,
    0.023653299,
    -0.13642932,
    -0.13627945,
    -0.006366889,
    -0.29228848,
    -0.17670599,
    -0.1296835,
    0.0013068359,
    0.19659716,
    0.41833004,
    0.0110287545,
    -0.22559468,
    -0.073359855,
    0.12068327,
    0.44105074,
    0.65358937,
    0.012881881,
    -0.20938548,
    -0.06066392,
    0.19443743,
    0.49340734,
    0.56686413,
    0.013375936,
    -0.3122875,
    -0.12508306,
    0.1097696,
    0.4664608,
    0.63427067,
    -0.38729015,
    -0.3974747,
    -0.26863506,
    -0.0879682,
    0.022537943,
    0.012691265,
    -0.61499995,
    -0.610867,
    -0.4043641,
    -0.1970223,
    0.036883082,
    0.39695632,
    -0.5628359,
    -0.530517,
    -0.33517307,
    -0.12317061,
    0.18496168,
    0.38875344,
    -0.13338648,
    -0.14772794,
    -0.117205486,
    0.012573943,
    0.25384888,
    0.40114835,
    -0.26950496,
    -0.2909713,
    -0.15816458,
    0.05662759,
    0.41120386,
    0.68267655,
    -0.42842972,
    -0.39527714,
    -0.18659931,
    0.049272172,
    0.4241506,
    0.77613187,
    -0.20682457,
    0.023555122,
    -0.24031971,
    -0.41813877,
    -0.6548529,
    -0.037382264,
    -0.29640517,
    -0.06223435,
    -0.18048343,
    0.0,
    0.0,
    0.0,
    0.004368524,
    0.0076928716,
    0.004360006,
    0.009378757,
    0.0029043844,
    0.008424118,
    -0.0050589656,
    -1.5691168,
    -1.4942999,
    -1.5343096,
    -1.539264,
    -1.58792,
    -1.5830047,
    -0.48932904,
    -0.5123903,
    -0.6978627,
    -0.8097981,
    -0.98248965,
    -1.0705847,
    -0.11197345,
    -0.22019617,
    -0.36199513,
    -0.791338,
    -1.106633,
    -1.3877431,
    -0.5398934,
    -0.6385119,
    -0.68846107,
    -0.62514347,
    -0.7163521,
    -0.6785744,
    -0.34116113,
    -0.38020533,
    -0.36152303,
    -0.47187528,
    -0.51742136,
    -0.49192274,
    -0.6042703,
    -0.8912111,
    -1.3566186,
    -1.0410732,
    -0.2864943,
    -0.014639917,
    0.09419481,
    0.1911196,
    0.5566722,
    0.2492178,
    0.054305166,
    0.17296587,
    0.31924838,
    0.6515768,
    0.20035823,
    0.36021665,
    -0.09744188,
    -0.39257592,
    -0.44636214,
    -0.46061084,
    -0.5667034,
    -0.066971935,
    -0.02321227,
    0.09330861,
    0.61917365,
    0.554809,
    0.4727759,
    0.50552166,
    0.112850346,
    -0.02681973,
    -0.80099624,
    -0.65386194,
    -0.4755595,
    -0.4454333,
    -0.13800113,
    -0.10076325,
    -0.20501734,
    0.0966686,
    0.18944526,
    0.3068639,
    0.49060494,
    0.48802388,
    0.8218135,
    0.83132535,
    -0.4471049,
    -0.49907923,
    -0.5367968,
    -0.5220517,
    -0.5731029,
    -0.5835956,
    -0.6276403,
    0.5466503,
    0.50005,
    0.46750817,
    0.44737375,
    0.43032688,
    0.38509113,
    0.38499328,
    0.25051472,
    0.18438083,
    0.014656757,
    -0.23343517,
    -0.070458926,
    -0.1316317,
    0.04688025,
    -0.15176108,
    0.03500397,
    -0.019145098,
    0.12709907,
    0.13094153,
    0.011067208,
    0.25231594,
    0.23823583,
    0.13442072,
    -0.0080201095,
    -0.21685728,
    -0.38000053,
    0.022628503,
    0.28896585,
    0.09492386,
    -0.027640095,
    -0.33633396,
    -0.45405906,
    0.008119384,
    0.20770577,
    0.038625754,
    -0.1348487,
    -0.41393137,
    -0.5562376,
    0.022637762,
    0.28515297,
    0.08447449,
    -0.09402865,
    -0.43131813,
    -0.68967235,
    0.37665704,
    0.5475158,
    0.36517793,
    0.16459845,
    0.063348405,
    -0.3371025,
    0.5570103,
    0.5453046,
    0.35895577,
    0.17892027,
    -0.04569356,
    -0.21876945,
    0.5353113,
    0.48343724,
    0.3035708,
    0.078402914,
    -0.15093075,
    -0.34918037,
    0.05475928,
    0.12754245,
    0.06636377,
    -0.09937328,
    -0.35637653,
    -0.5240909,
    0.31345052,
    0.30614,
    0.1295459,
    -0.08273119,
    -0.38652202,
    -0.73938495,
    0.5159691,
    0.41934234,
    0.2003989,
    -0.082798615,
    -0.39219394,
    -0.68622243,
    0.1119703,
    0.10201319,
    0.04833533,
    0.44643205,
    0.62111855,
    0.0144780055,
    0.2583021,
    -0.07523897,
    0.18546148,
    0.0,
    0.0,
    0.0,
];

#[allow(clippy::unreadable_literal)]
pub const POLICY_PARAMS_6S_0KOMI: [f32; NUM_POLICY_FEATURES_6S] = [
    -0.22143026,
    -0.0849862,
    -0.17535676,
    0.3812002,
    0.4170214,
    0.1386997,
    -0.18652934,
    -0.15030442,
    -0.21801011,
    0.296209,
    0.4177157,
    0.18935196,
    -0.43595684,
    -0.42143118,
    -0.319053,
    0.23768097,
    0.36987433,
    0.42760417,
    -0.1630682,
    -0.32947668,
    -0.30110526,
    0.13915803,
    0.2767703,
    0.32622215,
    -0.36356112,
    -0.8076446,
    -0.88640714,
    -0.13289374,
    0.64812076,
    2.1426673,
    -0.36989293,
    -1.0223608,
    -1.0593301,
    -0.4423812,
    0.4656247,
    2.2571917,
    -0.2926231,
    0.010643186,
    -0.046153486,
    -0.31950536,
    -0.099100955,
    -0.1494921,
    -2.3225024,
    1.089957,
    0.41105044,
    -2.0195537,
    -1.8055129,
    -0.09216875,
    0.38465405,
    -0.3635996,
    0.09867218,
    -0.059877783,
    0.07846245,
    0.028132537,
    -0.23320413,
    -0.023830011,
    0.32747945,
    0.7210579,
    0.74987864,
    -0.20408556,
    -0.16418873,
    -0.036857374,
    0.0047111823,
    0.016020037,
    -0.013799873,
    0.075888306,
    -0.21593693,
    0.25645667,
    0.4458865,
    0.33840922,
    -0.044397075,
    0.29926464,
    -0.046667617,
    0.04927832,
    0.2847673,
    0.5333238,
    0.4153492,
    -0.36769104,
    -0.41122165,
    -0.39770475,
    -0.17342325,
    0.2977098,
    0.6542841,
    -0.9261018,
    -0.77660775,
    -0.4097308,
    0.4450533,
    1.1362208,
    1.377478,
    0.549078,
    -0.07946689,
    0.2849431,
    0.28668717,
    -0.17861895,
    0.081650265,
    0.3891768,
    0.11223056,
    0.20692042,
    0.19083855,
    0.20309381,
    -0.1266848,
    1.6369063,
    0.4140696,
    0.84479594,
    -0.104653925,
    -0.069435425,
    0.076321,
    0.49237576,
    0.7448359,
    1.2991838,
    -0.11374381,
    -0.24328384,
    -0.24945916,
    2.437304,
    -0.07986489,
    2.1200736,
    1.6057884,
    0.53332746,
    -3.2993608,
    -0.6105765,
    0.7274314,
    1.3907989,
    0.45585397,
    0.55175036,
    0.08903245,
    0.34445125,
    0.29276943,
    0.15115795,
    -0.013258735,
    0.3244669,
    -0.021374837,
    0.32787785,
    -0.24644962,
    -0.38343275,
    0.18417045,
    0.15505536,
    -0.14612564,
    0.000556071,
    0.21599548,
    0.031067034,
    -0.0076902844,
    -0.008115211,
    0.2501559,
    0.07863739,
    1.8172377,
    -1.237277,
    -0.28833884,
    -0.42639956,
    -0.15854119,
    0.15544684,
    0.41351676,
    0.9728147,
    -1.0238575,
    -0.3507281,
    -0.1194157,
    0.07483305,
    0.2652914,
    -1.1323564,
    0.24948111,
    0.9710342,
    1.4530944,
    1.1808932,
    0.9514295,
    -0.053715374,
    -0.77286696,
    -0.71127963,
    0.3398925,
    0.99687266,
    0.67254794,
    0.025675878,
    -0.38995698,
    -0.38893032,
    -1.3037517,
    -0.9880528,
    -0.87716985,
    -0.21118587,
    -0.7851824,
    -1.2009711,
    0.32363293,
    -0.025306927,
    -0.038454186,
    -0.12422484,
    0.015015093,
    0.09548256,
    0.21665768,
    -0.21129419,
    0.18970679,
    -0.03219349,
    -0.07909597,
    -0.10612695,
    0.011386254,
    1.9433293,
    1.5146849,
    1.75224,
    -0.058385264,
    0.3662065,
    1.2364665,
    0.6742231,
    1.4233178,
    0.82355523,
    0.49658474,
    0.5702755,
    -0.034049768,
    0.7242249,
    0.15166451,
    0.9476766,
    2.7728653,
    0.008441852,
];

#[allow(clippy::unreadable_literal)]
pub const VALUE_PARAMS_6S_2KOMI: [f32; NUM_VALUE_FEATURES_6S] = [
    0.21959151,
    0.33242074,
    -0.13808766,
    -0.36791217,
    -0.7568726,
    -0.90282226,
    -0.9651463,
    1.5341429,
    1.4945296,
    1.5072485,
    1.5291768,
    1.586321,
    1.5650696,
    0.13009709,
    0.32962257,
    0.5225829,
    0.7184861,
    0.89109415,
    0.9796022,
    0.4262867,
    0.46033916,
    0.73254853,
    1.1298789,
    1.4982711,
    1.8273038,
    0.5240821,
    0.6673986,
    0.7426621,
    0.77927,
    0.86353284,
    0.9248367,
    0.37856224,
    0.43122998,
    0.46626064,
    0.550602,
    0.5953471,
    0.6205332,
    0.52381563,
    0.7617439,
    1.323692,
    0.9886035,
    0.16646259,
    -0.37021866,
    1.1171286,
    -0.027731374,
    -0.52732414,
    -0.109456815,
    -0.21212314,
    -0.077596515,
    -0.2364585,
    -0.33612934,
    -1.1660132,
    -0.40704995,
    -1.1927922,
    -0.8162635,
    -0.10398806,
    0.23851763,
    0.68727493,
    1.2965345,
    0.9377353,
    -1.3911673,
    -0.6598887,
    -0.85642326,
    -0.16977482,
    0.25200278,
    0.637306,
    1.2499481,
    0.8435055,
    0.5249753,
    0.25575975,
    0.055056535,
    -0.032514155,
    -0.27238533,
    -0.4966494,
    0.1361088,
    0.124361426,
    -0.17931844,
    -0.397408,
    -0.64107525,
    -0.6941763,
    -1.0214175,
    0.64950716,
    0.6553999,
    0.61661017,
    0.5714393,
    0.6398002,
    0.61061776,
    0.6562508,
    -0.4386643,
    -0.37681755,
    -0.35958844,
    -0.39123976,
    -0.41066122,
    -0.38875595,
    -0.37912795,
    -0.25588518,
    -0.2131498,
    -0.0057602744,
    0.26076415,
    0.058552023,
    0.1760659,
    0.008840711,
    0.08299299,
    -0.084145896,
    0.026771603,
    -0.10454353,
    -0.11056734,
    -0.006366889,
    -0.32358563,
    -0.22568408,
    -0.174399,
    -0.023969507,
    0.18531834,
    0.42264637,
    -0.060917027,
    -0.2986132,
    -0.14223827,
    0.17301457,
    0.52224004,
    0.8425829,
    -0.020693649,
    -0.30706486,
    -0.06963254,
    0.1947273,
    0.5301243,
    0.710408,
    -0.05039214,
    -0.43144894,
    -0.14994363,
    0.14591564,
    0.5304683,
    0.7782125,
    -0.5454855,
    -0.5881938,
    -0.40241358,
    -0.2287032,
    -0.03971659,
    0.29852778,
    -0.6754814,
    -0.6996679,
    -0.4562833,
    -0.1959117,
    0.11525993,
    0.39608142,
    -0.6106032,
    -0.64154494,
    -0.39690474,
    -0.1216389,
    0.15633984,
    0.54636765,
    -0.04241105,
    -0.24291733,
    -0.19952324,
    -0.023535665,
    0.24884115,
    0.5055374,
    -0.33957687,
    -0.40563005,
    -0.19217955,
    0.062212206,
    0.41672957,
    0.65819436,
    -0.5620474,
    -0.50741845,
    -0.2529914,
    0.08640021,
    0.45038933,
    0.7641539,
    -0.3983223,
    -0.34487906,
    -0.35648966,
    -0.7529397,
    -0.7048784,
    -0.25044414,
    -0.42570823,
    -0.28373384,
    -0.32993075,
    0.004368524,
    0.0076928716,
    0.004360006,
    0.009378757,
    0.0029043844,
    0.008424118,
    -0.0050589656,
    -0.0051581357,
    0.007047029,
    -0.0010688612,
    -1.586589,
    -1.576592,
    -1.6096834,
    -1.6134603,
    -1.6522367,
    -1.6191145,
    -0.4615183,
    -0.80131394,
    -0.9550249,
    -1.0670906,
    -1.2517989,
    -1.3551207,
    -0.2210387,
    -0.5068313,
    -0.8129022,
    -1.1245253,
    -1.5252334,
    -1.8250729,
    -0.56891173,
    -0.61012125,
    -0.66053253,
    -0.7569561,
    -0.76433796,
    -0.8175703,
    -0.35519862,
    -0.43272486,
    -0.46559748,
    -0.5356466,
    -0.58866096,
    -0.59564257,
    -0.5786399,
    -0.9137306,
    -1.4648795,
    -1.0805664,
    -0.32604608,
    0.35610512,
    -0.20495822,
    0.016605565,
    0.53494114,
    0.16218856,
    0.22757246,
    0.086889654,
    0.26031634,
    0.47926024,
    0.75979066,
    0.46405536,
    0.0071501285,
    -0.0013148449,
    0.008539425,
    -0.00934294,
    -0.0055954256,
    -0.056615032,
    -0.8823989,
    -0.008366895,
    0.0031465264,
    0.00024766196,
    -0.002034571,
    0.009508491,
    0.008153329,
    1.0646187,
    0.004003441,
    0.007172529,
    0.010608523,
    -0.41813332,
    -1.3511502,
    -0.62009394,
    -0.27780926,
    0.0035818908,
    -0.005072944,
    0.0015924015,
    0.01629514,
    -0.19995718,
    0.008886586,
    1.0526916,
    0.47523826,
    -0.006059273,
    -0.30558604,
    -0.60795254,
    -0.8120418,
    -0.7466019,
    -0.7636347,
    0.24641362,
    0.8717743,
    1.4484918,
    0.9263373,
    0.4132643,
    0.24180701,
    0.23027807,
    0.23912077,
    0.23289672,
    0.0042738654,
    -0.24194695,
    -0.06174169,
    -0.16942121,
    0.0011678716,
    -0.12755638,
    0.04952081,
    -0.027825106,
    0.1512234,
    0.12128745,
    0.0075244084,
    0.30529615,
    0.21076103,
    0.10647253,
    -0.05726293,
    -0.24120083,
    -0.45938268,
    -0.06608324,
    0.10516288,
    -0.03488248,
    -0.26807308,
    -0.58049893,
    -0.78401715,
    -0.02054122,
    0.16532856,
    -0.016578818,
    -0.21608122,
    -0.5039849,
    -0.6974428,
    -0.048894938,
    0.30743375,
    0.082768396,
    -0.19443545,
    -0.5686367,
    -0.8229074,
    0.4334908,
    0.56840855,
    0.42066222,
    0.2942681,
    0.038159266,
    -0.2003401,
    0.56406265,
    0.61390686,
    0.41616338,
    0.20738563,
    -0.06800446,
    -0.44833308,
    0.56086195,
    0.54623777,
    0.32392004,
    0.08977459,
    -0.14630897,
    -0.47748512,
    0.074939676,
    0.18822427,
    0.16849525,
    0.032532774,
    -0.21970448,
    -0.45130342,
    0.32041767,
    0.345732,
    0.17711613,
    -0.07376632,
    -0.3542509,
    -0.6556559,
    0.53329116,
    0.46753332,
    0.25450176,
    -0.03268984,
    -0.40145287,
    -0.75321436,
    0.33717358,
    0.1336379,
    0.069577545,
    0.54118866,
    0.21571442,
    0.01053549,
    0.23881985,
    -0.029780855,
    0.17329897,
    -0.0090307,
    0.0028009461,
    0.008272812,
];

#[allow(clippy::unreadable_literal)]
pub const POLICY_PARAMS_6S_2KOMI: [f32; NUM_POLICY_FEATURES_6S] = [
    -0.19503154,
    -0.12362914,
    -0.014476952,
    0.1293408,
    0.39704305,
    0.5470459,
    -0.15411288,
    -0.27485037,
    -0.0027197665,
    0.00079508696,
    0.2081439,
    0.3155167,
    -0.43359625,
    -0.6074917,
    -0.49195316,
    -0.059010584,
    0.12954628,
    0.0051814453,
    0.18664025,
    -0.137732,
    -0.1312176,
    0.31285983,
    0.4855721,
    0.5482397,
    -1.3329813,
    -0.92475855,
    -0.90139997,
    0.2932013,
    0.93210095,
    2.3240151,
    -1.8565153,
    -0.82043785,
    -1.142818,
    -0.119251594,
    1.1615776,
    3.1175444,
    -0.39369163,
    0.07161641,
    -0.06650144,
    -0.20854479,
    -0.14141531,
    -0.1545027,
    -1.611854,
    1.0370011,
    0.22189696,
    -2.7705343,
    -2.546845,
    -0.12893282,
    0.38663197,
    -0.3054693,
    0.069809824,
    -0.060277984,
    0.08187812,
    0.04651423,
    -0.20321114,
    0.028254135,
    0.3302957,
    0.6853508,
    0.66909295,
    -0.12687431,
    -0.13126762,
    -0.020818893,
    0.07651732,
    -0.026115827,
    -0.1391066,
    -0.056598347,
    -0.49062485,
    -0.20975296,
    0.5235232,
    1.7298747,
    -0.023911461,
    0.29625535,
    -0.072582856,
    0.033619154,
    0.28091276,
    0.49271098,
    0.5254612,
    -0.37898397,
    -0.44348094,
    -0.41309553,
    -0.14512257,
    0.31468305,
    0.68684226,
    -0.9869161,
    -0.5736394,
    -0.17564523,
    0.5332606,
    1.5439388,
    1.1361613,
    0.45397452,
    0.014010055,
    -0.34014073,
    0.4454187,
    -0.32420436,
    0.9538358,
    0.41139868,
    0.1253136,
    0.6996414,
    0.18237072,
    0.064627014,
    -0.63998246,
    1.5653934,
    0.46210027,
    1.171629,
    -0.08657739,
    -0.22199379,
    -0.68047094,
    0.483034,
    0.8222614,
    0.9905622,
    -0.0928437,
    -0.2819505,
    -0.13637227,
    2.4368057,
    -0.10118279,
    2.142179,
    3.3366833,
    0.4530824,
    -4.360496,
    -0.748574,
    0.797563,
    1.367072,
    0.468734,
    0.5737921,
    0.08767056,
    0.30373627,
    0.33218375,
    0.08691605,
    0.04580583,
    0.32124776,
    -0.024104744,
    0.32039583,
    0.27117246,
    -1.3581654,
    -0.10697947,
    0.4041121,
    -0.39698815,
    -0.24205254,
    0.1885827,
    0.077095434,
    -0.009454608,
    0.00140775,
    0.34577936,
    0.15602456,
    2.0222723,
    -2.591959,
    -1.4679781,
    -1.6594332,
    -0.19238111,
    0.2539213,
    0.5135198,
    1.0847487,
    -2.1352367,
    -1.4178672,
    -0.58508015,
    0.77877814,
    0.31001574,
    -1.2054963,
    0.23851863,
    1.142249,
    1.6883537,
    1.3733891,
    1.5959365,
    0.7582614,
    -0.9429437,
    -0.5365311,
    0.35982093,
    1.1296109,
    1.6009202,
    0.4890167,
    -1.7734762,
    -0.82184213,
    -1.2654694,
    -1.1649573,
    -1.2989757,
    -0.31668687,
    -1.1604459,
    -1.9590708,
    0.3262075,
    -0.027594479,
    -0.03566085,
    -0.11064184,
    0.041156102,
    0.081675924,
    0.23550917,
    -0.18001094,
    0.23237064,
    0.15497857,
    0.30384922,
    -0.17179798,
    -0.11283507,
    1.8824205,
    1.3375564,
    1.654556,
    0.077785276,
    1.9568424,
    1.9591439,
    0.5659014,
    1.368362,
    0.49496707,
    0.5681695,
    0.55174625,
    0.15413849,
    0.70945466,
    0.6876609,
    0.82044715,
    2.720477,
    0.0018270491,
];
